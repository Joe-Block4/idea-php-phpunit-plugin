<idea-plugin url="https://github.com/Haehnchen/idea-php-phpunit-plugin">
    <id>de.espend.idea.php.phpunit</id>
    <name>PHPUnit Enhancement</name>
    <version>6.0</version>
    <vendor email="daniel@espendiller.net" url="http://espend.de?p=de.espend.idea.php.phpunit">espend_de</vendor>

    <description><![CDATA[
    <p>Provide smart autocomplete, code navigation and refactoring features for mocked class methods of PhpUnit, Prophecy, and Mockery.</p>

    <br/>

    <a href="https://github.com/Haehnchen/idea-php-phpunit-plugin">GitHub</a> | <a href="https://www.paypal.me/DanielEspendiller">Donate</a>

    <p><h2>Feature list</h2></p>
    <ul>
        <li>
            <p>method autocomplete for class, abstract class and trait mock objects;</p>
            <ul>
                <li>type providers: <tt>getMock</tt>, <tt>getMockForAbstractClass</tt>, etc. will return mock object with methods of mocking class and <tt>PHPUnit_Framework_MockObject_MockObject</tt>;</li>
                <li>
                    <p>supported PHPUnit methods:</p>
                    <p><tt>PHPUnit_Framework_MockObject_MockBuilder::setMethods</tt></p>
                    <p><tt>PHPUnit_Framework_TestCase::getMock</tt></p>
                    <p><tt>PHPUnit_Framework_TestCase::getMockClass</tt></p>
                    <p><tt>PHPUnit_Framework_TestCase::getMockForAbstractClass</tt></p>
                    <p><tt>PHPUnit_Framework_TestCase::getMockForTrait</tt></p>
                    <p><tt>PHPUnit_Framework_MockObject_Builder_InvocationMocker::method</tt></p>
                </li>
            </ul>
        </li>
        <li>code navigation (go to declaration, find usages, etc.) and refactoring (rename methods);</li>
        <li>highlighting of incorrect method usages;</li>
        <li>Prophecy support.</li>
        <li>Mockery support:
            <ul>
                <li>Referencing, autocompletion, refactoring</li>
                <li>Method highlighting</li>
                <li>Inspector to update legacy Mockery style</li>
                <li>Type providers for mock method functions</li>
            </ul>
        </li>
    </ul>

    <p>Fork of <a href="https://github.com/maxfilatov/phpuaca/">PHPUnit Autocomplete Assistant</a></p>
  ]]></description>

    <idea-version since-build="202"/>

    <depends>com.jetbrains.php</depends>
    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.jetbrains.php">
        <typeProvider4 implementation="de.espend.idea.php.phpunit.type.MockProphecyTypeProvider"/>
        <typeProvider4 implementation="de.espend.idea.php.phpunit.type.ProphecyTypeProvider"/>
        <typeProvider4 implementation="de.espend.idea.php.phpunit.type.RevealProphecyTypeProvider"/>
        <typeProvider4 implementation="de.espend.idea.php.phpunit.type.GetMockTypeProvider"/>
        <typeProvider4 implementation="de.espend.idea.php.phpunit.type.SetUpTypeProvider"/>
        <typeProvider4 implementation="de.espend.idea.php.phpunit.type.ProphecyArgumentTypeProvider"/>
        <typeProvider4 implementation="de.espend.idea.php.phpunit.type.MockeryMethodNameTypeProvider"/>
        <typeProvider4 implementation="de.espend.idea.php.phpunit.type.MockeryExpectationTypeProvider"/>

        <libraryRoot id="doctrine_meta" path="/phpstorm-meta/" runtime="false"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <annotator language="PHP" implementationClass="com.phpuaca.annotator.StringAnnotator"/>

        <annotator language="PHP" implementationClass="de.espend.idea.php.phpunit.annotator.MockeryAnnotator"/>

        <completion.confidence language="PHP" implementationClass="com.phpuaca.completion.StringCompletionConfidence"
                               id="asTrue" order="first"/>

        <completion.contributor language="PHP" implementationClass="com.phpuaca.completion.StringCompletionContributor"/>

        <completion.contributor language="PHP" implementationClass="de.espend.idea.php.phpunit.completion.PhpUnitCompletionContributor"/>

        <completion.contributor language="PHP" implementationClass="de.espend.idea.php.phpunit.completion.MockeryCompletionContributor"/>

        <psi.referenceContributor language="PHP" implementation="de.espend.idea.php.phpunit.reference.PhpUnitReferenceContributor"/>

        <psi.referenceContributor language="PHP" implementation="de.espend.idea.php.phpunit.reference.MockeryReferenceContributor"/>

        <psi.referenceContributor language="PHP" implementation="com.phpuaca.reference.StringReferenceContributor"/>

        <codeInsight.lineMarkerProvider language="PHP" implementationClass="de.espend.idea.php.phpunit.linemarker.RelatedTestCaseLineMarkerProvider"/>

        <intentionAction>
            <className>de.espend.idea.php.phpunit.intention.TestRunIntentionAction</className>
            <category>PHPUnit</category>
            <descriptionDirectoryName>TestRunIntentionAction</descriptionDirectoryName>
        </intentionAction>

        <intentionAction>
            <className>de.espend.idea.php.phpunit.intention.AddMockMethodIntention</className>
            <category>PHPUnit</category>
            <descriptionDirectoryName>AddMockMethodIntention</descriptionDirectoryName>
        </intentionAction>

        <intentionAction>
            <className>de.espend.idea.php.phpunit.intention.ConstructorMockIntention</className>
            <category>PHPUnit</category>
            <descriptionDirectoryName>ConstructorMockIntention</descriptionDirectoryName>
        </intentionAction>

        <intentionAction>
            <className>de.espend.idea.php.phpunit.intention.MethodExceptionIntentionAction</className>
            <category>PHPUnit</category>
            <descriptionDirectoryName>MethodExceptionIntentionAction</descriptionDirectoryName>
        </intentionAction>

        <localInspection language="PHP" groupPath="PHP, Mockery Inspections" shortName="replaceLegacyMockerySyntax"
                         displayName="Replace legacy Mockery syntax" groupName="Mockery" enabledByDefault="true" level="WARNING"
                         implementationClass="de.espend.idea.php.phpunit.inspection.ReplaceLegacyMockeryInspection"/>

    </extensions>

    <application-components>
    </application-components>

    <project-components>
    </project-components>

    <actions>
    </actions>

</idea-plugin>
